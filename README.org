#+Title: SCI Emacs
#+Author: Turbulence
#+Email: 211110103110@stu.just.edu.cn
#+PROPERTY: HEADER-ARGS+ :eval no

* Introduction
This is my Emacs configuration, specifically tailored for academic research.

* Installation 
#+begin_src bash :noeval
  # Clone this repository into your Emacs directory
  git clone https://github.com/TurbulenceChaos/SCI-emacs.git ~/.emacs.d
  cd ~/.emacs.d

  # Initialize and update Git submodules recursively
  git submodule update --init --recursive
  
  # Install ispell for spell-checking support
  sudo apt install -y ispell
#+end_src

* Test
Test Org Babel functionality in [[file:Test/Test.org]].

** Test Tikz
#+name: Tikz-styles
#+begin_src latex :eval no
  % Define color
  \definecolor{water-blue}{HTML}{569AFF}
  \definecolor{light-green}{HTML}{8CC361}
  % Define tikzstyle
  \tikzstyle{Water-blue}=[bottom color=water-blue,top color=white]
#+end_src

Type ~C-c C-c~ to evaluate [[Test-tikz]].

#+name: Test-tikz
#+begin_src latex :file Test-tikz.png
  \usetikzlibrary{}
  <<Tikz-styles>>  
  \begin{tikzpicture}[scale=3]
    \def\L{2cm}
    \def\H{1/1.618*2cm}
    \def\Arrow{0.6cm}
    \draw[draw=blue,Water-blue,ultra thick](0,3/4*\H)cos(\L/2,\H/2)sin(\L,\H/4)--(\L,0)--(0,0)--cycle;
    \draw[ultra thick](0,0)rectangle(\L,\H);
    \draw[-stealth,line width=2mm,color=light-green](\L+\Arrow,\H/2)--node[above=4pt,black]{Excitation}++(-\Arrow,0);
    \node at (\L/2,\H/4) {Water};
    \draw[thick,dashed,draw=gray](0,\H/2)--++(\L,0);
    \draw[-latex](\L/2,\H/2)node[below left]{$O$}--++(0.5,0)node[below]{$x$};
    \draw[-latex](\L/2,\H/2)--++(45:0.3)node[above]{$y$};
    \draw[-latex](\L/2,\H/2)--++(0,0.5)node[right]{$z$};
  \end{tikzpicture}
#+end_src

#+RESULTS: Test-tikz

[[file:Test/Test-tikz.png]]  

** Test emacs-jupyter
#+begin_src jupyter-Wolfram-Language :results silent
  Get["~/.emacs.d/lisp-site/Wolfram-terminal-image/WolframTerminalImage.wl"]

  (* Enable or disable auto-deletion of Wolfram terminal images *)

  wolframTerminalDeleteImage = "no";

  (* Resolution of Wolfram terminal images *)

  wolframTerminalImageResolution = 150;

  (* Emacs *)
  wolframTerminalType = "emacs";
#+end_src

#+begin_src jupyter-Wolfram-Language
  sol1 = DSolve[{D[y[x, t], t] + 2 D[y[x, t], x] == Sin[x], y[0, t] == 
  Cos[t]}, y[x, t], {x, t}]

  sol2 = sol1[[1, 1, 2]]

  Plot3D[sol2, {x, -10, 10}, {t, -5, 5}]
#+end_src

#+RESULTS:
:results:

[[file:Test/tmp/wolfram/wolfram-bb5f9b0d-5916-4ccc-a470-cb0ecf54dd70.png]]

[[file:Test/tmp/wolfram/wolfram-89618318-6704-422e-b329-2b5f1de6e59b.png]]

[[file:Test/tmp/wolfram/wolfram-95a162a2-a1a4-4d56-950b-6e14205d6ca2.png]]

:end:
